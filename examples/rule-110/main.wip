const size = 100;

const arr1 = allocateInt(size);
const arr2 = allocateInt(size);

var i = 0;

while (i - size) {
  *(arr1 + (i*8)) = 0;
  ++i;
}

*(arr1 + ((size - 1) * 8)) = 1

const drawLine = (arr: *int, size: int) => {
  var i = 0;
  while (i - size) {
    const current = *(arr + (i*8));

    if (current) {
      print("#");
    }

    if (current - 1) {
      print(" ");
    }
    ++i;
  }
  print("\n");
};

const processCell = (left: int, middle: int, right: int): int => {
  if (left) {
    if (middle) {
      if (right) {
        return 0;
      }
      return 1;
    }
    if (right) {
      return 1;
    }
    return 0;
  }
  if (middle) {
    if (right) {
      return 1;
    }
    return 1;
  }
  if (right) {
    return 1;
  }
  return 0;
};

const processLine = (arr1: *int, arr2: *int, size: int) => {

  var i = 0;
  while (i - size) {
    printInt(i);
    print("\n");

    var left = 0;
    if (i) {
      left = *(arr1 + ((i - 1) * 8));
    }
    print("!1\n");
    var right = 0;
    if (i - size - 1) {
      right = *(arr1 + ((i + 1) * 8));
    }
    print("!2\n");

    const current =  *(arr1 + (i * 8));
    print("!3\n");
    (*(arr2 + (i * 8))) = processCell(left, current, right);
    print("!4\n");
    ++i;
  }
};

print("=====\n");

drawLine(arr1, size);
processLine(arr1, arr2, size);
drawLine(arr2, size);

print("=====\n");
